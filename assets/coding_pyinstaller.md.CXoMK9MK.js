import{_ as a,c as e,o as s,a5 as i}from"./chunks/framework.B9eG-oMa.js";const u=JSON.parse('{"title":"让你的python文件可以独立运行","description":"","frontmatter":{},"headers":[],"relativePath":"coding/pyinstaller.md","filePath":"coding/pyinstaller.md","lastUpdated":1756132200000}'),n={name:"coding/pyinstaller.md"};function p(l,t,d,o,r,c){return s(),e("div",null,t[0]||(t[0]=[i(`<h1 id="让你的python文件可以独立运行" tabindex="-1">让你的python文件可以独立运行 <a class="header-anchor" href="#让你的python文件可以独立运行" aria-label="Permalink to &quot;让你的python文件可以独立运行&quot;">​</a></h1><div class="warning custom-block"><p class="custom-block-title">警告</p><p>这篇文章写于2020年，可能存在过时问题</p></div><p>我们都知道，python文件必须要安装python，那么有没有一种方法使其可以独立运行呢？下面让我们了解一下</p><h2 id="准备" tabindex="-1">准备 <a class="header-anchor" href="#准备" aria-label="Permalink to &quot;准备&quot;">​</a></h2><ol><li>安装pyinstaller <blockquote><p>在命令提示符中输入</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pyinstaller</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://mirrors.aliyun.com/pypi/simple/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></blockquote></li><li>将[python安装目录]\\Scripts添加到Path <blockquote><p>按下Win+R并输入&quot;C:\\Windows\\System32\\control.exe system&quot;</p><p>打开&quot;高级系统设置&quot;</p><p>选择&quot;高级&quot;选项卡，并打开&quot;环境变量...&quot;</p><p>win7/更早版本在&quot;Path&quot;中需要在前面加一个&quot;;&quot;</p></blockquote></li><li>安装setup factory <blockquote><p>下载：<a href="http://y.downya.com/down2/setupfactory_v9.1.0_downyi.com.zip" target="_blank" rel="noreferrer">http://y.downya.com/down2/setupfactory_v9.1.0_downyi.com.zip</a></p><p>激活码：SUF-BMDP-F2NS-GN82-FS3J</p></blockquote></li><li>导入要独立运行的python文件</li><li>成功制作</li></ol><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h2><p><code>pyinstaller &lt;file&gt; [-F | -D] [-c | -w] [-p &lt;lib_path&gt;] [-i &lt;icon_path&gt;]</code></p><table tabindex="0"><thead><tr><th>参数名</th><th>是否必选/必选条件</th><th>描述</th></tr></thead><tbody><tr><td>file</td><td>✔️</td><td>python文件的 cmd/powershell的相对路径 或 绝对路径</td></tr><tr><td>-F</td><td>❌</td><td>只生成单个exe格式文件，建议小型程序使用此方式(与-D相反)</td></tr><tr><td>-D</td><td>❌</td><td>创建一个目录，包含exe文件以及大量依赖文件(默认，与-F相反)</td></tr><tr><td>-c</td><td>❌</td><td>唤醒cmd窗口来运行程序(默认，与-w相反)</td></tr><tr><td>-w</td><td>❌</td><td>直接运行程序，不唤醒cmd窗口(与-c相反)</td></tr><tr><td>-p</td><td>❌</td><td>在lib_path下查找库文件</td></tr><tr><td>lib_path</td><td>指定-p时</td><td>指定在哪里查找库文件</td></tr><tr><td>-i</td><td>❌</td><td>指定是否使用自定义程序图标</td></tr><tr><td>icon_path</td><td>指定-i时</td><td>指定程序图标的 cmd/powershell的相对路径 或 绝对路径</td></tr></tbody></table><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pyinstaller test.py</span></span>
<span class="line"><span>pyinstaller test.py -F</span></span>
<span class="line"><span>pyinstaller test.py -w</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,9)]))}const b=a(n,[["render",p]]);export{u as __pageData,b as default};
