name: Deploy VitePress site to Pages

on:
  push:
    branches: [main]
  # 允许你从 Actions 选项卡手动运行此工作流程
  workflow_dispatch:

# 设置 GITHUB_TOKEN 的权限，以允许部署到 GitHub Pages
permissions:
  contents: write

# 只允许同时进行一次部署，跳过正在运行和最新队列之间的运行队列
# 但是，不要取消正在进行的运行，因为我们希望允许这些生产部署完成
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  # 构建工作
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # 如果未启用 lastUpdated，则不需要

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: npm

      # 根据 key 判断是否命中 node_modules
      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('package-lock.json') }}

      # true代表缓存命中，node_modules没有变化，而''代表没有命中，node_modules发生变化
      - name: Cache Hit
        run: echo "${{ steps.cache-node-modules.outputs.cache-hit }}"

      # 只有结果是''时才执行
      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit == ''
        run: npm ci

      - name: Build with VitePress
        run: |
          npm run build
          touch .vitepress/dist/.nojekyll

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
            branch: gh-pages
            folder: .vitepress/dist
